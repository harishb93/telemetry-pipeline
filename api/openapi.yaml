openapi: 3.0.3
info:
  title: Telemetry API Gateway
  description: |
    API Gateway for GPU Telemetry Pipeline
    
    This API provides access to GPU telemetry data collected by the telemetry pipeline.
    Data is stored in both file-based and memory-based persistence layers.
  version: 1.0.0
  contact:
    name: API Support
    email: support@example.com
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  termsOfService: http://swagger.io/terms/

servers:
  - url: http://localhost:8081/api/v1
    description: Development server

paths:
  /gpus:
    get:
      summary: Get all GPU IDs
      description: Returns a list of all GPU IDs for which telemetry data is available
      operationId: getGPUs
      tags:
        - GPUs
      parameters:
        - name: limit
          in: query
          description: Number of items to return (default: 50, max: 1000)
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 1000
            default: 50
        - name: offset
          in: query
          description: Number of items to skip (default: 0)
          required: false
          schema:
            type: integer
            minimum: 0
            default: 0
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GPUResponse'
              examples:
                success:
                  summary: Example response
                  value:
                    gpus: ["gpu_0", "gpu_1", "gpu_2"]
                    total: 3
                    pagination:
                      limit: 50
                      offset: 0
                      has_next: false
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /gpus/{id}/telemetry:
    get:
      summary: Get telemetry data for a GPU
      description: Returns telemetry entries for a specific GPU, optionally filtered by time range
      operationId: getTelemetry
      tags:
        - Telemetry
      parameters:
        - name: id
          in: path
          description: GPU ID
          required: true
          schema:
            type: string
          example: "gpu_0"
        - name: start_time
          in: query
          description: Start time filter (RFC3339 format)
          required: false
          schema:
            type: string
            format: date-time
          example: "2024-01-01T00:00:00Z"
        - name: end_time
          in: query
          description: End time filter (RFC3339 format)
          required: false
          schema:
            type: string
            format: date-time
          example: "2024-01-01T23:59:59Z"
        - name: limit
          in: query
          description: Number of items to return (default: 100, max: 1000)
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 1000
            default: 100
        - name: offset
          in: query
          description: Number of items to skip (default: 0)
          required: false
          schema:
            type: integer
            minimum: 0
            default: 0
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TelemetryResponse'
              examples:
                success:
                  summary: Example response
                  value:
                    data:
                      - gpu_id: "gpu_0"
                        metrics:
                          temperature: 72.3
                          utilization: 85.5
                          memory_used: 4096.0
                          power_draw: 250.5
                        timestamp: "2024-01-01T12:00:00Z"
                    total: 1
                    pagination:
                      limit: 100
                      offset: 0
                      has_next: false
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: GPU not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /health:
    get:
      summary: Health check
      description: Returns the health status of the API service
      operationId: getHealth
      tags:
        - Health
      responses:
        '200':
          description: Service is healthy
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "healthy"
                  timestamp:
                    type: string
                    format: date-time
                    example: "2024-01-01T12:00:00Z"
                  version:
                    type: string
                    example: "1.0.0"
                  service:
                    type: string
                    example: "telemetry-api"
                  collector:
                    type: object
                    properties:
                      status:
                        type: string
                        example: "healthy"
                      memory_stats:
                        type: object

components:
  schemas:
    GPUResponse:
      type: object
      properties:
        gpus:
          type: array
          items:
            type: string
          description: List of GPU IDs
          example: ["gpu_0", "gpu_1", "gpu_2"]
        total:
          type: integer
          description: Total number of GPUs available
          example: 3
        pagination:
          $ref: '#/components/schemas/PaginationMetadata'
      required:
        - gpus
        - total
        - pagination

    TelemetryResponse:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/TelemetryEntry'
          description: List of telemetry entries
        total:
          type: integer
          description: Total number of telemetry entries matching the criteria
          example: 1
        pagination:
          $ref: '#/components/schemas/PaginationMetadata'
      required:
        - data
        - total
        - pagination

    TelemetryEntry:
      type: object
      properties:
        gpu_id:
          type: string
          description: GPU identifier
          example: "gpu_0"
        metrics:
          type: object
          additionalProperties:
            type: number
            format: double
          description: GPU metrics as key-value pairs
          example:
            temperature: 72.3
            utilization: 85.5
            memory_used: 4096.0
            power_draw: 250.5
        timestamp:
          type: string
          format: date-time
          description: Timestamp when the telemetry was recorded
          example: "2024-01-01T12:00:00Z"
      required:
        - gpu_id
        - metrics
        - timestamp

    PaginationMetadata:
      type: object
      properties:
        limit:
          type: integer
          description: Number of items requested
          example: 100
        offset:
          type: integer
          description: Number of items skipped
          example: 0
        has_next:
          type: boolean
          description: Whether there are more items available
          example: false
      required:
        - limit
        - offset
        - has_next

    ErrorResponse:
      type: object
      properties:
        error:
          type: string
          description: Error type
          example: "Bad Request"
        message:
          type: string
          description: Error message
          example: "Invalid pagination parameters"
        code:
          type: integer
          description: HTTP status code
          example: 400
      required:
        - error
        - message
        - code

  parameters:
    GPUId:
      name: id
      in: path
      description: GPU ID
      required: true
      schema:
        type: string
      example: "gpu_0"

    Limit:
      name: limit
      in: query
      description: Number of items to return
      required: false
      schema:
        type: integer
        minimum: 1
        maximum: 1000
        default: 100

    Offset:
      name: offset
      in: query
      description: Number of items to skip
      required: false
      schema:
        type: integer
        minimum: 0
        default: 0

    StartTime:
      name: start_time
      in: query
      description: Start time filter (RFC3339 format)
      required: false
      schema:
        type: string
        format: date-time

    EndTime:
      name: end_time
      in: query
      description: End time filter (RFC3339 format)
      required: false
      schema:
        type: string
        format: date-time

tags:
  - name: GPUs
    description: Operations related to GPU management
  - name: Telemetry
    description: Operations related to telemetry data
  - name: Health
    description: Health check operations