basePath: /api/v1
definitions:
  github_com_harishb93_telemetry-pipeline_internal_collector.Telemetry:
    properties:
      gpu_id:
        type: string
      metrics:
        additionalProperties:
          format: float64
          type: number
        type: object
      timestamp:
        type: string
    type: object
  internal_api.ErrorResponse:
    properties:
      code:
        type: integer
      error:
        type: string
      message:
        type: string
    type: object
  internal_api.GPUResponse:
    properties:
      gpus:
        items:
          type: string
        type: array
      pagination:
        $ref: '#/definitions/internal_api.PaginationMetadata'
      total:
        type: integer
    type: object
  internal_api.PaginationMetadata:
    properties:
      has_next:
        type: boolean
      limit:
        type: integer
      offset:
        type: integer
    type: object
  internal_api.TelemetryResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/github_com_harishb93_telemetry-pipeline_internal_collector.Telemetry'
        type: array
      pagination:
        $ref: '#/definitions/internal_api.PaginationMetadata'
      total:
        type: integer
    type: object
host: localhost:8081
info:
  contact:
    email: support@example.com
    name: API Support
  description: API Gateway for GPU Telemetry Pipeline
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  termsOfService: http://swagger.io/terms/
  title: Telemetry API Gateway
  version: "1.0"
paths:
  /gpus:
    get:
      consumes:
      - application/json
      description: Returns a list of all GPU IDs for which telemetry data is available
      parameters:
      - description: 'Number of items to return (default: 50, max: 1000)'
        in: query
        name: limit
        type: integer
      - description: 'Number of items to skip (default: 0)'
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/internal_api.GPUResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/internal_api.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/internal_api.ErrorResponse'
      summary: Get all GPU IDs
      tags:
      - GPUs
  /gpus/{id}/telemetry:
    get:
      consumes:
      - application/json
      description: Returns telemetry entries for a specific GPU, optionally filtered
        by time range
      parameters:
      - description: GPU ID
        in: path
        name: id
        required: true
        type: string
      - description: Start time filter (RFC3339 format)
        in: query
        name: start_time
        type: string
      - description: End time filter (RFC3339 format)
        in: query
        name: end_time
        type: string
      - description: 'Number of items to return (default: 100, max: 1000)'
        in: query
        name: limit
        type: integer
      - description: 'Number of items to skip (default: 0)'
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/internal_api.TelemetryResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/internal_api.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/internal_api.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/internal_api.ErrorResponse'
      summary: Get telemetry data for a GPU
      tags:
      - Telemetry
  /health:
    get:
      consumes:
      - application/json
      description: Returns the health status of the API service
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: Health check
      tags:
      - Health
swagger: "2.0"
